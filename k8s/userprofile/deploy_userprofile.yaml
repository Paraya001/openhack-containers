apiVersion: apps/v1
kind: Deployment
metadata:
  name: userprofile
  namespace: api-dev
  labels:
    app: usrpro-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: userprofile
  template:
    metadata:
      labels:
        app: userprofile
    spec:
      containers:
        - name: userprofile
          image: 'registryqzm1711.azurecr.io/userprofile:latest'
          ports:
            - containerPort: 80
          env:
            - name: SQL_USER
              valueFrom:
                secretKeyRef:
                  name: sqlusersecret
                  key:  sqluser
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sqlpasswordsecret
                  key: sqlpassword
            - name: SQL_SERVER
              value: sqlserverqzm1711.database.windows.net
            - name: SQL_DBNAME
              value: mydrivingDB
            - name: WEB_PORT
              value: '80'
            - name: WEB_SERVER_BASE_URI
              value: 'http://0.0.0.0'
            - name: ASPNETCORE_ENVIRONMENT
              value: Production
            - name: CONFIG_FILES_PATH
              value: /secrets
          #envFrom:
          #  - secretRef:
          #    name: {{name of your secret in kubernetes}}
          # not required, but recommended best practice
          livenessProbe:
            httpGet:
              path: "{{url path you want to check}}" # hint: there is a healthcheck endpoint - read the README!
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: "{{url path you want to check}}"
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: azure-kvname
            nodePublishSecretRef:                       # Only required when using service principal mode
              name: secrets-store-creds                 # Only required when using service principal mode  
            
          # resource limits are also best practice - I'll let you figure that out on your own
---
apiVersion: v1
kind: Service
metadata:
  name: userprofile
  namespace: api-dev
spec:
  type: ClusterIP #LoadBalancer
  selector:
    app: userprofile
  ports:
    - protocol: TCP
      name: userprofile-http
      port: 80 # port you hit
      targetPort: 80 # port inside
